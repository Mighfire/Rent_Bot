import asyncio
import logging
import keyboards as kb
from handlers import order
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command


from config import TOKEN_API

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(TOKEN_API)
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()
dp.include_routers(order.router)


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command("start", "menu"))
async def cmd_start(message: types.Message):
    await message.answer("<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç!ü§ñ</b>"
                         "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞—à–µ–π —Ç–µ—Ö–Ω–∏–∫–æ–π –∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑!", reply_markup=kb.keyboard_main, parse_mode="HTML")

@dp.message(F.text.lower() == "–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
async def back(message: types.Message):
    await message.answer("<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç!ü§ñ</b>"
                         "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞—à–µ–π —Ç–µ—Ö–Ω–∏–∫–æ–π –∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑!", reply_markup=kb.keyboard_main, parse_mode="HTML")

@dp.message(F.text.lower() == "–æ –Ω–∞—Å")
async def about_us(message: types.Message):
    await message.answer("–ú—ã –æ—Ç–ª–∏—á–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è, –¥–∞–µ–º —Ç–µ—Ö–Ω–∏–∫—É –≤ –∞—Ä–µ–Ω–¥—Éüë®‚Äçüíª!",reply_markup=kb.keyboard_back)



# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())